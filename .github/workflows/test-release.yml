name: Test Release

on:
  workflow_dispatch:
    inputs:
      test_name:
        description: 'Test name'
        required: true
        default: 'test-release'
      branch:
        description: 'Branch to run on'
        required: true
        default: 'fix/release'

jobs:
  test-release:
    name: Test Release Process (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        include:
          - os: ubuntu-20.04
            boost_version: "1.65"
          - os: ubuntu-22.04
            boost_version: "1.74"
          - os: ubuntu-24.04
            boost_version: "1.82"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up C++ toolchain
        run: |
          # Remove problematic Microsoft repository to avoid 421 Misdirected Request error
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update --allow-releaseinfo-change
          sudo apt-get install -y build-essential cmake ninja-build
          
          # Install Ubuntu version-specific Boost
          if [ "${{ matrix.os }}" = "ubuntu-20.04" ]; then
            sudo apt-get install -y libboost1.65-dev libboost-system1.65-dev
          elif [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
            sudo apt-get install -y libboost1.74-dev libboost-system1.74-dev
          else
            sudo apt-get install -y libboost1.82-dev libboost-system1.82-dev
          fi

      - name: Configure
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DUNILINK_ENABLE_INSTALL=ON \
            -DUNILINK_ENABLE_PKGCONFIG=ON \
            -DUNILINK_ENABLE_EXPORT_HEADER=ON

      - name: Build
        run: cmake --build build --config Release -- -v

      - name: Test
        run: cmake --build build --target test

      - name: Package
        run: |
          cd build
          cpack -B package -G TGZ
          ls -la package/

      - name: Show package contents
        run: |
          cd build/package
          tar -tzf unilink-*.tar.gz | head -20

      - name: Test package extraction
        run: |
          cd build/package
          mkdir -p test_extract
          tar -xzf unilink-*.tar.gz -C test_extract
          ls -la test_extract/

      - name: Summary
        run: |
          echo "## Test Release Summary - ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Build: Success" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Tests: Passed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Package: Created" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”§ Boost Version: ${{ matrix.boost_version }}" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ Package files:" >> $GITHUB_STEP_SUMMARY
          ls -la build/package/ >> $GITHUB_STEP_SUMMARY
